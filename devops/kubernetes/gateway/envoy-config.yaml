---
# EnvoyProxy configuration for advanced features
apiVersion: config.gateway.envoyproxy.io/v1alpha1
kind: EnvoyProxy
metadata:
  name: social-media-envoy
  namespace: social-media
  labels:
    app.kubernetes.io/name: social-media-envoy
spec:
  # Bootstrap configuration
  bootstrap:
    type: Replace
    value: |
      node:
        cluster: social-media-cluster
        id: social-media-envoy
      static_resources:
        listeners:
        - name: main_listener
          address:
            socket_address:
              address: 0.0.0.0
              port_value: 8080
      admin:
        address:
          socket_address:
            address: 0.0.0.0
            port_value: 9901
        access_log:
        - name: envoy.access_loggers.stdout
          typed_config:
            "@type": type.googleapis.com/envoy.extensions.access_loggers.stream.v3.StdoutAccessLog
  # Provider-specific configuration
  provider:
    type: Kubernetes
    kubernetes:
      envoyService:
        type: LoadBalancer
        loadBalancerClass: metallb
      envoyDeployment:
        replicas: 2
        container:
          resources:
            requests:
              cpu: 100m
              memory: 128Mi
            limits:
              cpu: 200m
              memory: 256Mi
          securityContext:
            runAsUser: 65534
            runAsGroup: 65534
            runAsNonRoot: true
            allowPrivilegeEscalation: false
            capabilities:
              drop:
              - ALL
        pod:
          affinity:
            podAntiAffinity:
              preferredDuringSchedulingIgnoredDuringExecution:
              - weight: 100
                podAffinityTerm:
                  labelSelector:
                    matchLabels:
                      app.kubernetes.io/name: envoy
                  topologyKey: kubernetes.io/hostname
---
# BackendTLSPolicy for secure communication to backends
apiVersion: gateway.networking.k8s.io/v1alpha2
kind: BackendTLSPolicy
metadata:
  name: backend-tls-policy
  namespace: social-media
spec:
  targetRef:
    group: ""
    kind: Service
    name: backend-service
  tls:
    caCertRefs:
    - name: backend-ca-cert
      group: ""
      kind: ConfigMap
    hostname: backend-service.social-media.svc.cluster.local
